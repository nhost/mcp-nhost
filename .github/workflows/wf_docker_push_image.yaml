---
on:
  workflow_call:
    inputs:
      NAME:
        type: string
        required: true
      VERSION:
        type: string
        required: true

    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  push-to-ecr:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    permissions:
      id-token: write
      contents: write

    steps:
      - name: "Check out repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: "Compute common env vars"
        id: vars
        run: |
          echo "VERSION=$(make get-version VER=${{ inputs.VERSION }})" >> $GITHUB_OUTPUT

      - name: "Get artifacts"
        uses: actions/download-artifact@v4
        with:
          path: ~/artifacts

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Push docker image to docker hub"
        run: |
          export VERSION=${{ steps.vars.outputs.VERSION }}
          export CONTAINER_NAME=nhost/mcp-nhost

          docker load < ~/artifacts/mcp-nhost-docker-image-$VERSION-linux-amd64/result
          docker tag mcp-nhost:$VERSION $CONTAINER_NAME:$VERSION-amd64
          docker push $CONTAINER_NAME:$VERSION-amd64

          docker load < ~/artifacts/mcp-nhost-docker-image-$VERSION-linux-arm64/result
          docker tag mcp-nhost:$VERSION $CONTAINER_NAME:$VERSION-arm64
          docker push $CONTAINER_NAME:$VERSION-arm64

          docker manifest create \
              $CONTAINER_NAME:$VERSION \
              --amend $CONTAINER_NAME:$VERSION-amd64 \
              --amend $CONTAINER_NAME:$VERSION-arm64
          docker manifest push $CONTAINER_NAME:$VERSION
